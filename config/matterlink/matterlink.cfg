# Configuration file

##########################################################################################################
# commands
#--------------------------------------------------------------------------------------------------------#
# User commands
##########################################################################################################

commands {
    # Enable MC bridge commands [default: true]
    B:enable=true

    # Prefix for MC bridge commands. Accepts a single character (not alphanumeric or /) [default: $]
    S:prefix=$
}


##########################################################################################################
# connection
#--------------------------------------------------------------------------------------------------------#
# Connection settings
##########################################################################################################

connection {
    # Auth token used to connect to the bridge server [default: ]
    S:authToken=

    # Connect the relay on startup [default: true]
    B:autoConnect=true

    # The URL or IP address of the bridge server [default: http://localhost:4242]
    S:connectURL=http://localhost:4242

    # MatterBridge gateway [default: minecraft]
    S:gateway=minecraft
}


##########################################################################################################
# debug
#--------------------------------------------------------------------------------------------------------#
# Options to help you figure out what happens and why, because computers can be silly
##########################################################################################################

debug {
    # announce successful connection to the gateway [default: false]
    B:announceConnect=false

    # announce intention to disconnect / reconnect [default: false]
    B:announceDisconnect=false

    # MatterLink log level [default: INFO]
    S:logLevel=INFO
}


##########################################################################################################
# incoming
#--------------------------------------------------------------------------------------------------------#
# Gateway -> Server
# Options all about receiving messages from the API
# Formatting options: 
# Available variables: {username}, {text}, {gateway}, {channel}, {protocol}, {username:antiping}
##########################################################################################################

incoming {
    # User actions (/me) sent by users from other gateways [default: §5* {username} {text}]
    S:action=§5* {username} {text}

    # Generic chat event, just talking [default: <{username}> {text}]
    S:chat=<{username}> {text}

    # Join and part events from other gateways [default: §6-- {username} {text}]
    S:joinPart=§6-- {username} {text}
}


##########################################################################################################
# outgoing
#--------------------------------------------------------------------------------------------------------#
# Server -> Gateway
# Options all about sending messages to the API
##########################################################################################################

outgoing {
    # Relay player achievements / advancements [default: true]
    B:advancements=true

    # Name of the server user (used by death and advancement messages and the /say command) [default: Server]
    S:systemUser=Server

    ##########################################################################################################
    # death
    #--------------------------------------------------------------------------------------------------------#
    # Death messages settings
    ##########################################################################################################

    death {
        # Enable Damage type symbols on death messages [default: true]
        B:damageType=true

        # Damage type mapping for death cause, 
        # separate value and key with '=', 
        # separate multiple values with spaces
        #  [default: [inFire=🔥], [lightningBolt=🌩], [onFire=🔥], [lava=🔥], [hotFloor=♨️], [inWall=], [cramming=], [drown=🌊], [starve=💀], [cactus=🌵], [fall=⯯️], [flyIntoWall=💨], [outOfWorld=✴], [generic=👻], [magic=✨ ⚚], [indirectMagic=✨ ⚚], [wither=🕱], [anvil=], [fallingBlock=], [dragonBreath=🐲], [fireworks=🎆], [mob=💀], [player=🗡], [arrow=🏹], [thrown=彡°], [thorns=🌹], [explosion=💣 💥], [explosion.player=💣 💥]]
        S:damageTypeMapping <
            inFire=🔥
            lightningBolt=🌩
            onFire=🔥
            lava=🔥
            hotFloor=♨️
            inWall=
            cramming=
            drown=🌊
            starve=💀
            cactus=🌵
            fall=⯯️
            flyIntoWall=💨
            outOfWorld=✴
            generic=👻
            magic=✨ ⚚
            indirectMagic=✨ ⚚
            wither=🕱
            anvil=
            fallingBlock=
            dragonBreath=🐲
            fireworks=🎆
            mob=💀
            player=🗡
            arrow=🏹
            thrown=彡°
            thorns=🌹
            explosion=💣 💥
            explosion.player=💣 💥
         >

        # Relay player death messages [default: true]
        B:enable=true
    }

    ##########################################################################################################
    # join&part
    #--------------------------------------------------------------------------------------------------------#
    # relay join and part messages to the gatway
    # Formatting options: 
    # Available variables: {username}, {username:antiping}
    ##########################################################################################################

    "join&part" {
        # Relay when a player joins / parts the game
        # any receiving end still needs to be configured with showJoinPart = true
        # to display the messages [default: true]
        B:enable=true

        # user join message sent to other gateways, available variables: {username}, {username:antiping} [default: {username:antiping} has connected to the server]
        S:joinServer={username:antiping} has connected to the server

        # user part message sent to other gateways, available variables: {username}, {username:antiping} [default: {username:antiping} has disconnected from the server]
        S:partServer={username:antiping} has disconnected from the server
    }

}


##########################################################################################################
# update
#--------------------------------------------------------------------------------------------------------#
# Update Settings
##########################################################################################################

update {
    # Enable Update checking [default: true]
    B:enable=true
}


